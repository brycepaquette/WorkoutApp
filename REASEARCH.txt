Step 1 - Creating a database of exercises to choose from in the app
* Found a website Programmableweb.com which lead me to an API on RapidAPI.com
* This looks promising and rapidAPI gives you access to hundreds of APIs
* Fitness APIs: https://www.programmableweb.com/category/fitness/api
* ExerciseDB API: https://rapidapi.com/justin-WFnsXH_t6/api/exercisedb/


--Create sqlite db
* how to Create Tables: https://www.sqlitetutorial.net/sqlite-create-table/
* sqlite datatypes: https://www.tutorialspoint.com/sqlite/sqlite_data_types.htm

--Load Exercises into the database
* need python sqlite3 module: https://docs.python.org/3/library/sqlite3.html
* sqlite browser GUI: https://sqlitebrowser.org/dl/
* Altering existing tables: https://www.sqlitetutorial.net/sqlite-alter-table/

Step 2 - Initializing a Flask App from Scratch
* Flask QuickStart: https://flask.palletsprojects.com/en/2.0.x/quickstart/
* Turned on debug mode: https://flask.palletsprojects.com/en/2.0.x/quickstart/#debug-mode
* Template Inheritance: https://flask.palletsprojects.com/en/2.0.x/patterns/templateinheritance/
* Created layout.html as base template to extend from. Created index.html

Step 3 - Connecting to git and pulling/pushing
* CS50 Wep Class on Git: https://cs50.harvard.edu/web/2020/notes/1/
'Git Clone <URLHERE>' clones the repository in the current directory
* Run 'git add <new file name>' to track that specific file, or 'git add .' to track all files within that directory.
